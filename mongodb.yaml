apiVersion: v1
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp2
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  storageClassName: gp2
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  labels:
    app: mongo-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-db
  labels:
    app: mongo-db
spec:
  ports:
    - name: mongodb
      port: 27017
      nodePort: 30332
  type: NodePort
  selector:
    app: mongo-db
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
data:
  MONGODB_INITDB_ROOT_USERNAME: "user"
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secrets
type: Opaque
data:
  MONGODB_INITDB_ROOT_PASSWORD: cGFzc3dvcmQK
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db
spec:
  selector:
    matchLabels:
      app: mongo-db
#   serviceName: "mong-db"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo-db
    spec:
      containers:
        - name: mongo-db
          image: mongo:4.4.18
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              name: mongodb
          envFrom:
            - configMapRef:
                name: mongo-config
            - secretRef:
                name: mongo-secrets
          volumeMounts:
            - name: mongodb-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongodb-persistent-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc